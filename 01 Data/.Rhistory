scale_y_continuous() +
facet_wrap(~CLARITY, ncol=1) +
labs(title='Diamonds Barchart\nAVERAGE_PRICE, WINDOW_AVG_PRICE, ') +
labs(x=paste("COLOR"), y=paste("AVG_PRICE")) +
layer(data=df,
mapping=aes(x=COLOR, y=AVG_PRICE),
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue"),
position=position_identity()
) + coord_flip() +
layer(data=df,
mapping=aes(x=COLOR, y=AVG_PRICE, label=round(AVG_PRICE)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-0.5),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=COLOR, y=AVG_PRICE, label=round(WINDOW_AVG_PRICE)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-2),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=COLOR, y=AVG_PRICE, label=round(AVG_PRICE - WINDOW_AVG_PRICE)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-5),
position=position_identity()
) +
layer(data=df,
mapping=aes(yintercept = WINDOW_AVG_PRICE),
geom="hline",
geom_params=list(colour="red")
)
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATA"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_gv4353', PASS='orcl_gv4353', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATA"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_gv4353', PASS='orcl_gv4353', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
df <- MEDICALDATA %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS) %>% summarize(AVG_DIFF = mean(Averagetotalpayments - Averagemedicarepayments)) %>% rename(COLOR=color, CLARITY=clarity)
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATA"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_gv4353', PASS='orcl_gv4353', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- MEDICALDATA %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS) %>% summarize(AVG_DIFF = mean(Averagetotalpayments - Averagemedicarepayments)) #%>% rename(COLOR=color, CLARITY=clarity)
df <- diamonds %>% group_by(color, clarity) %>% summarize(AVG_PRICE = mean(price)) %>% rename(COLOR=color, CLARITY=clarity)
# df1 <- df %>% ungroup %>% group_by(CLARITY) %>% summarize(WINDOW_AVG_PRICE=mean(AVG_PRICE))
# df <- inner_join(df, df1, by="CLARITY")
spread(df, COLOR, AVG_PRICE) %>% View
getwd()
setwd("C:/Users/Wes James/Documents/Data Visualization/DV_TProject1/01 Data")
file_path <- "medicaldataclean.csv"
# str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
df <- read.csv(file_path, stringsAsFactors = FALSE)
measures <- c("TotalDischarges", "AverageCoveredCharges", "AverageTotalPayments", "AverageMedicarePayments")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
for(n in names(df)) {
# Google ASCII Table to understand the following:
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
for(d in dimensions) {
if( length(measures) > 1 || ! is.na(dimensions)) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# The following is an example of dealing with special cases like making state abbreviations be all upper case.
}
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
# df["State"] <- data.frame(lapply(df["State"], toupper))
#Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
for(d in dimensions) {
}
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
if( length(measures) > 1 || ! is.na(dimensions)) {
}
if( length(measures) > 1 || ! is.na(measures)) {
}
}
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
for(m in measures) {
else sql <- paste(sql, paste(m, "number(38,4)\n"))
sql <- paste(sql, ");")
cat(sql)
setwd("C:/Users/Wes James/Documents/Data Visualization/DV_TProject1/01 Data")
file_path <- "medicaldataclean.csv"
# str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
getwd()
df <- read.csv(file_path, stringsAsFactors = FALSE)
measures <- c("TotalDischarges", "AverageCoveredCharges", "AverageTotalPayments", "AverageMedicarePayments")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
# The following is an example of dealing with special cases like making state abbreviations be all upper case.
# df["State"] <- data.frame(lapply(df["State"], toupper))
#Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATACLEAN"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_gv4353', PASS='orcl_gv4353', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATACLEAN"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_wlj362', PASS='orcl_wlj362', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATACLEAN"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_wlj362', PASS='orcl_wlj362', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATACLEAN"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_wlj362', PASS='orcl_wlj362', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
df <- MEDICALDATA %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS) %>% summarize(AVG_DIFF = mean(Averagetotalpayments - Averagemedicarepayments)) #%>% rename(COLOR=color, CLARITY=clarity)
# df1 <- df %>% ungroup %>% group_by(CLARITY) %>% summarize(WINDOW_AVG_PRICE=mean(AVG_PRICE))
# df <- inner_join(df, df1, by="CLARITY")
setwd("C:/Users/Wes James/Documents/Data Visualization/DV_TProject1/01 Data")
file_path <- "medicaldataclean.csv"
# str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
df <- read.csv(file_path, stringsAsFactors = FALSE)
measures <- c("TotalDischarges", "AverageCoveredCharges", "AverageTotalPayments", "AverageMedicarePayments")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
# The following is an example of dealing with special cases like making state abbreviations be all upper case.
# df["State"] <- data.frame(lapply(df["State"], toupper))
#Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from COLLEGESTATS where tuitionfees1314 is not null"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_gv4353', PASS='orcl_gv4353', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
require("ggplot2")
require("ggthemes")
require("gplots")
require("grid")
require("RCurl")
require("reshape2")
require("rstudio")
require("tableplot")
require("tidyr")
require("dplyr")
require("jsonlite")
require("extrafont")
require("lubridate")
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select color, clarity, avg_price,
avg(avg_price)
OVER (PARTITION BY clarity ) as window_avg_price
from (select color, clarity, avg(price) avg_price
from diamonds
group by color, clarity)
order by clarity;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATACLEAN"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_wlj362', PASS='orcl_wlj362', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
View(df)
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATA"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_gv4353', PASS='orcl_gv4353', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
df <- MEDICALDATA %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS) %>% summarize(AVG_DIFF = mean(Averagetotalpayments - Averagemedicarepayments)) #%>% rename(COLOR=color, CLARITY=clarity)
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATACLEAN"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_gv4353', PASS='orcl_gv4353', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
source('~/Data Visualization/DV_TProject1/03 R SQL Visualizations/Scatterplot.R', echo=TRUE)
df <- MEDICALDATA %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS) %>% summarize(AVG_DIFF = mean(Averagetotalpayments - Averagemedicarepayments)) %>% View() #rename(COLOR=color, CLARITY=clarity)
df <- MEDICALDATA %>% mutate(AVG_DIFFERENCE = mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)) %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS) %>% summarize(AVG_DIFF = mean(AVG_DIFFERENCE)) %>% View() #rename(COLOR=color, CLARITY=clarity)
df <- medicaldata %>% mutate(AVG_DIFFERENCE = mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)) %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS) %>% summarize(AVG_DIFF = mean(AVG_DIFFERENCE)) %>% View() #rename(COLOR=color, CLARITY=clarity)
df <- MEDICALDATA %>% mutate(AVG_DIFFERENCE = mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)) %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS) %>% summarize(AVG_DIFF = mean(AVG_DIFFERENCE)) %>% View() #rename(COLOR=color, CLARITY=clarity)
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATA"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_gv4353', PASS='orcl_gv4353', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
df <- df2 %>% mutate(AVG_DIFFERENCE = mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)) %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS) %>% summarize(AVG_DIFF = mean(AVG_DIFFERENCE)) %>% View()
df2 <- df %>% mutate(AVG_DIFFERENCE = mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)) %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS) %>% summarize(AVG_DIFF = mean(AVG_DIFFERENCE)) %>% View()
df2 <- df %>% mutate(AVG_DIFFERENCE = mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)) %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS) %>% summarize(AVG_DIFF = mean(AVG_DIFFERENCE)) %>% View()
df2 <- df %>% mutate(AVG_DIFFERENCE = (AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)) %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS) %>% summarize(AVG_DIFF = mean(AVG_DIFFERENCE)) %>% View()
df2 <- df %>% mutate(AVG_DIFFERENCE = (AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)) %>% group_by(DRGDEFINITION, AVERAGETOTALPAYMENTS, AVERAGEMEDICAREPAYMENTS, AVERAGECOVEREDCHARGES) %>% summarize(AVG_DIFF = mean(AVG_DIFFERENCE)) %>% View()
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from superstore_sales_orders"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AGE)), y=as.numeric(as.character(FARE)), color=SEX),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AGE)), y=as.numeric(as.character(FARE)), color=SEX),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Titanic') +
labs(x="SURVIVED", y=paste("FARE")) +
layer(data=df,
mapping=aes(x=SEX, y=as.numeric(as.character(FARE)), color=as.character(SURVIVED)),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
source('~/Data Visualization/DrCannata/RWorkshop/12 Tableau/Blending 2 Data Sources.R', echo=TRUE)
source('~/Data Visualization/DV_TProject1/03 R SQL Visualizations/Scatterplot.R', echo=TRUE)
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATA"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_gv4353', PASS='orcl_gv4353', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
df <- df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)))
ggplot(
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) +
geom_point(aes(color=PUBLICPRIVATE)) +
labs(title='Medical Data \n Percentiles vs. Total Discharges ' +
labs(x="Percentile of Average Differences",
y=paste("Total Discharges")))
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATA"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_gv4353', PASS='orcl_gv4353', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
df <- df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) +
geom_point(aes(color=PUBLICPRIVATE)) +
labs(title='Medical Data \n Percentiles vs. Total Discharges ' +
labs(x="Percentile of Average Differences",
y=paste("Total Discharges")))
df <- df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) +
geom_point(aes(color=PUBLICPRIVATE)) +
labs(title='Medical Data \n Percentiles vs Total Discharges' +
labs(x="Percentile of Average Differences",
y=paste("Total Discharges")))
df <- df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) + geom_point(aes(color=PUBLICPRIVATE)) + labs(title='Medical Data \n Percentiles vs Total Discharges' + labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df <- df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) + geom_point(aes(color=PUBLICPRIVATE)) + labs(title="Medical Data \n Percentiles vs Total Discharges" + labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df <- df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) + geom_point(aes(color=PUBLICPRIVATE))  labs(title="Medical Data \n Percentiles vs Total Discharges" + labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df <- df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) + geom_point(aes(color=PUBLICPRIVATE)) + facet_wrap(~x) + labs(title="Medical Data \n Percentiles vs Total Discharges" + labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df <- df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) + geom_point(aes(color=PUBLICPRIVATE)) + facet_wrap(~x) + labs(title="Medical Data \n Percentiles vs Total Discharges" + labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df <- df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) + labs(title="Medical Data \n Percentiles vs Total Discharges" + labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df <- df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) %>% labs(title="Medical Data \n Percentiles vs Total Discharges" + labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df <- df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) %>% labs(title="Medical Data \n Percentiles vs Total Discharges" %>% labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df <- df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) + labs(title="Medical Data \n Percentiles vs Total Discharges" + labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) + labs(title="Medical Data \n Percentiles vs Total Discharges" + labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATA"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_gv4353', PASS='orcl_gv4353', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% ggplot(aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) + labs(title="Medical Data \n Percentiles vs Total Discharges" + labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)))
ggplot(aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) + labs(title="Medical Data \n Percentiles vs Total Discharges" + labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)))
ggplot(data =
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) +
labs(title="Medical Data \n Percentiles vs Total Discharges" +
labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from MEDICALDATA"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_gv4353', PASS='orcl_gv4353', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)))
ggplot(data =
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) +
labs(title="Medical Data \n Percentiles vs Total Discharges" +
labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
ggplot(data = NULL,
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) +
labs(title="Medical Data \n Percentiles vs Total Discharges" +
labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)))
ggplot(data = NULL,
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) +
labs(title="Medical Data \n Percentiles vs Total Discharges" +
labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
ggplot(data = NULL,
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) +
labs(title="Medical Data \n Percentiles vs Total Discharges", +
labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)),
labs(title="Medical Data \n Percentiles vs Total Discharges",
labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
ggplot(data = NULL,
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)),
ggplot(data = NULL,
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) +
labs(title="Medical Data \n Percentiles vs Total Discharges",
labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
ggplot(data = NULL,
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) +
geom_point(size = 3) +
labs(title="Medical Data \n Percentiles vs Total Discharges",
labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)))
ggplot(data = NULL,
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) +
geom_point(size = 3) +
labs(title="Medical Data \n Percentiles vs Total Discharges",
labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df
summary(df)
head(df)
df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)))
df %>% mutate(AVG_DIFFERENCE = cume_dist(mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% View()
df %>% mutate(AVG_DIFFERENCE = mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS))) %>% View()
df %>% mutate(AVG_DIFFERENCE = mean(AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS)) %>% View()
df %>% mutate(AVG_DIFFERENCE = AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS, AVG_DIFF = mean(AVG_DIFFERENCE)) %>% View()
df %>% mutate(AVG_DIFFERENCE = AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS, AVG_DIFF = cume_dist(AVG_DIFFERENCE)) %>% View()
ggplot(data = NULL,
aes(x = AVG_DIFFERENCE, y = TOTALDISCHARGES)) +
geom_point(size = 3) +
labs(title="Medical Data \n Percentiles vs Total Discharges",
labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
facet_grid(.~MEDICALDATA, labeller=label_both) +
labs(title="Medical Data \n Percentiles vs Total Discharges") +
labs(x="Percentile of Average Differences", y=paste("Total Discharges")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AVG_DIFFERENCE)), y=as.numeric(as.character(TOTALDISCHARGES))
)
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
facet_grid(.~MEDICALDATA, labeller=label_both) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AVE_DIFFERENCE)), y=as.numeric(as.character(TOTALDISCHARGES))),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
facet_grid(.~MEDICALDATA, labeller=label_both) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AVE_DIFFERENCE)), y=as.numeric(as.character(TOTALDISCHARGES))),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AVE_DIFFERENCE)), y=as.numeric(as.character(TOTALDISCHARGES))),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AVG_DIFFERENCE)), y=as.numeric(as.character(TOTALDISCHARGES))),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot(data = NULL,
aes(x = AVG_DIFF, y = TOTALDISCHARGES)) +
geom_point(size = 3) +
labs(title="Medical Data \n Percentiles vs Total Discharges",
labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
ggplot(data = df,
aes(x = AVG_DIFF, y = TOTALDISCHARGES)) +
geom_point(size = 3) +
labs(title="Medical Data \n Percentiles vs Total Discharges",
labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df %>% mutate(AVG_DIFFERENCE = AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS, AVG_DIFF = cume_dist(AVG_DIFFERENCE)) %>% ggplot(data = df, aes(x = AVG_DIFF, y = TOTALDISCHARGES)) + geom_point(size = 3) + labs(title="Medical Data \n Percentiles vs Total Discharges",  labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
df %>% mutate(AVG_DIFFERENCE = AVERAGETOTALPAYMENTS - AVERAGEMEDICAREPAYMENTS, AVG_DIFF = cume_dist(AVG_DIFFERENCE)) %>% ggplot(aes(x = AVG_DIFF, y = TOTALDISCHARGES)) + geom_point(size = 3) + labs(title="Medical Data \n Percentiles vs Total Discharges",  labs(x="Percentile of Average Differences", y=paste("Total Discharges")))
